{"componentChunkName":"component---src-templates-blog-post-js","path":"/2025/02/belajar-tentang-exception/","result":{"data":{"site":{"siteMetadata":{"title":"Dev Jurnal","author":"mmdmthr","siteUrl":"https://mmdmthr.github.io","comment":{"disqusShortName":"","utterances":"mmdmthr/devjurnal"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"3d770815-e74a-59af-9121-b7f5573f3ec6","excerpt":"Exceptions are used to change the normal flow of a script if a specified error occurs. Dalam pemrograman, exception digunakan untuk menangani kondisi kegagalan yang tidak dapat diatasi dengan cara biasa. Artikel ini menganalogikan situasi yang harusnya tidak terjadi ini seperti…","html":"<blockquote>\n<p>Exceptions are used to change the normal flow of a script if a specified error occurs.</p>\n</blockquote>\n<p>Dalam pemrograman, <em>exception</em> digunakan untuk menangani kondisi kegagalan yang tidak dapat diatasi dengan cara biasa. <a href=\"https://mattwarren.org/2016/12/20/Why-Exceptions-should-be-Exceptional/\">Artikel ini</a> menganalogikan situasi yang harusnya tidak terjadi ini seperti peluang sebuah asteroid menabrak bumi, paling tidak peluang kasusnya terjadi adalah kurang dari 1:1000. Ada beberapa poin sejauh ini yang saya pelajari tentang exception:</p>\n<h3 id=\"exception-dilempar-jika-post-condition-tidak-terpenuhi\" style=\"position:relative;\"><a href=\"#exception-dilempar-jika-post-condition-tidak-terpenuhi\" aria-label=\"exception dilempar jika post condition tidak terpenuhi permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exception Dilempar Jika Post-Condition Tidak Terpenuhi</h3>\n<p>Saat suatu fungsi dipanggil, kita memiliki ekspektasi tertentu tentang apa yang akan dicapai fungsi tersebut. Secara formal, ekspektasi ini disebut <em>post-conditions</em>. Jika fungsi ini gagal memenuhi post-conditions-nya, maka fungsi tersebut harus memunculkan exception.</p>\n<p>Ketika sebuah metode memiliki ekspektasi tertentu (post-condition), maka exception harus dilempar jika kondisi tersebut gagal. Contoh:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$model</span><span class=\"token operator\">-></span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// post-condition: The model object is saved.</span></code></pre></div>\n<p>Jika model tidak tersimpan karena alasan tertentu, maka exception harus dimunculkan karena post-condition tidak terpenuhi, menunjukkan kondisi yang tidak normal.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$model</span><span class=\"token operator\">-></span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// post-condition: (the model is saved &amp;&amp; result == true) ||</span>\n<span class=\"token comment\">//                 (the model is not saved &amp;&amp; result == false)</span></code></pre></div>\n<p>Jika save tidak benar-benar menyimpan, maka hasil yang dikembalikan akan bernilai false, tetapi post-condition masih dapat terpenuhi, maka tidak ada exception.</p>\n<h3 id=\"catch-exception-pada-titik-strategis\" style=\"position:relative;\"><a href=\"#catch-exception-pada-titik-strategis\" aria-label=\"catch exception pada titik strategis permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Catch Exception pada Titik Strategis</h3>\n<p>Exception sebaiknya hanya ditangkap di titik-titik tertentu dalam aplikasi, seperti batas antar modul atau pada tingkat paling atas dari aplikasi (misalnya dalam controller atau job queue handler). Hindari terlalu sering menangkap dan melempar ulang exception kecuali ada kebutuhan khusus, seperti membatalkan perubahan dalam transaksi.</p>\n<p>Exception memiliki overhead lebih tinggi dibanding return biasa. Exception lebih sulit di-debug karena bisa menghentikan eksekusi dan “melompat” ke handler. Sebaiknya hanya digunakan untuk kondisi gagal yang tidak bisa ditangani secara normal.</p>\n<p>Melempar exception sebenarnya cukup mahal sehingga banyak pakar menyarankan untuk membatasinya pada kasus-kasus yang diyakini bahwa kurang dari 1 panggilan dalam 1000 (99,9%) ke layanan tertentu akan memerlukan exception. </p>\n<p>Ini berarti melemparkan exception pada hal-hal seperti argumen yang tidak valid ke API mungkin baik-baik saja, tetapi di sisi lain melemparkan exception karena input pengguna yang tidak valid, atau teks yang diformat dengan buruk dari sistem eksternal, bisa menjadi ide yang buruk. Penggunaan exception yang signifikan dalam validasi logika bisnis lebih sering merupakan ide yang buruk daripada yang baik, jadi kita perlu berhati-hati.</p>\n<h3 id=\"hindari-menggunakan-exception-untuk-flow-control\" style=\"position:relative;\"><a href=\"#hindari-menggunakan-exception-untuk-flow-control\" aria-label=\"hindari menggunakan exception untuk flow control permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hindari Menggunakan Exception untuk Flow Control</h3>\n<p>Exception seharusnya tidak digunakan sebagai pengganti percabangan logika (<code class=\"language-text\">if</code>, <code class=\"language-text\">switch</code>). </p>\n<p>Contoh yang buruk:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token function\">getUserOrFail</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">UserNotFoundException</span> <span class=\"token variable\">$e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token function\">createGuestUser</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Lebih baik menggunakan pendekatan yang lebih langsung:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token function\">getUser</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">??</span> <span class=\"token function\">createGuestUser</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Menggunakan exception untuk flow control memperlambat eksekusi dan membuat kode sulit dipahami.</p>\n<h3 id=\"gunakan-exception-yang-spesifik\" style=\"position:relative;\"><a href=\"#gunakan-exception-yang-spesifik\" aria-label=\"gunakan exception yang spesifik permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gunakan Exception yang Spesifik</h3>\n<p>Alih-alih menggunakan <code class=\"language-text\">Exception</code> generik, lebih baik gunakan exception yang spesifik agar lebih mudah ditangani:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">InvalidArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Email tidak valid'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Dengan exception yang spesifik, kita dapat menangani error secara lebih terarah. Di sini kita juga bisa membuat custom exception.</p>\n<h3 id=\"aplikasi-tetap-berjalan\" style=\"position:relative;\"><a href=\"#aplikasi-tetap-berjalan\" aria-label=\"aplikasi tetap berjalan permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Aplikasi Tetap Berjalan</h3>\n<p>Exception seharusnya tidak menyebabkan aplikasi berhenti sepenuhnya. Misalnya, dalam aplikasi berbasis request-response seperti Laravel, exception harus ditangani dengan baik agar sistem tetap bisa melayani permintaan lain meskipun ada error pada satu request. Paling tidak exception ditangkap, lalu fungsi mengembalikan respon disertai informasi error, sehingga bagian FE bisa memberitahu user apa yang sebenarnya terjadi.</p>\n<p><em>Referensi:</em></p>\n<ul>\n<li><a href=\"https://avdi.codes/jim-weirich-on-exceptions/\">Jim Weirich on exception</a></li>\n<li><a href=\"https://mattwarren.org/2016/12/20/Why-Exceptions-should-be-Exceptional/\">Why Exceptions Should Be Exceptional</a></li>\n<li><a href=\"https://learn.microsoft.com/en-us/archive/blogs/ricom/exception-cost-when-to-throw-and-when-not-to\">Exception Cost When To Throw and When Not To</a></li>\n</ul>","frontmatter":{"title":"Belajar tentang Exception","date":"February 22, 2025"}}},"pageContext":{"slug":"/2025/02/belajar-tentang-exception/","previous":{"fields":{"slug":"/2025/02/belajar-dengan-membuat/"},"frontmatter":{"title":"Belajar dengan Membuat"}},"next":{"fields":{"slug":"/2025/03/sisi-lain-dari-small-functions/"},"frontmatter":{"title":"Sisi Lain dari Small Functions"}}}},"staticQueryHashes":["2486386679","3128451518"]}