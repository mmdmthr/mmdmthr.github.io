{"componentChunkName":"component---src-templates-blog-post-js","path":"/2025/03/alternatif-pattern-untuk-menangani-error/","result":{"data":{"site":{"siteMetadata":{"title":"Dev Jurnal","author":"mmdmthr","siteUrl":"https://mmdmthr.github.io","comment":{"disqusShortName":"","utterances":"mmdmthr/devjurnal"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"2b5c4d8d-cff2-5df8-bdd0-f5b54538c7c1","excerpt":"Ini adalah lanjutan dari post (Belajar tentang Exception)/2025/02/belajar-tentang-exception/ yang membahas tentang dalam situasi apa sebaiknya exception digunakan untuk menangani error. Post ini akan membahas alternatif lain untuk menangani error. Ada beberapa pattern selain‚Ä¶","html":"<p>Ini adalah lanjutan dari post (Belajar tentang Exception)[/2025/02/belajar-tentang-exception/] yang membahas tentang dalam situasi apa sebaiknya exception digunakan untuk menangani error. Post ini akan membahas alternatif lain untuk menangani error. Ada beberapa pattern selain <code class=\"language-text\">try-catch</code> yang bertujuan untuk menangani error atau kondisi tertentu tanpa menggunakan exception secara langsung. Berikut beberapa pattern yang sering digunakan beserta contohnya dalam bahasa PHP:  </p>\n<h2 id=\"tryxxx-pattern-mirip-dengan-net\" style=\"position:relative;\"><a href=\"#tryxxx-pattern-mirip-dengan-net\" aria-label=\"tryxxx pattern mirip dengan net permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TryXXX() Pattern (Mirip dengan .NET)</h2>\n<p>üí° <strong>Alih-alih melempar exception, fungsi mengembalikan nilai bool yang menunjukkan keberhasilan atau kegagalan.</strong>  </p>\n<h4 id=\"contoh\" style=\"position:relative;\"><a href=\"#contoh\" aria-label=\"contoh permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Contoh</h4>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">tryParseNumber</span><span class=\"token punctuation\">(</span><span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$input</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token variable\">$output</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword return-type\">bool</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$input</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Tidak perlu exception</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token variable\">$output</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">int</span><span class=\"token punctuation\">)</span> <span class=\"token variable\">$input</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">tryParseNumber</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"123\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$number</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Angka: <span class=\"token interpolation\"><span class=\"token variable\">$number</span></span>\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ‚úÖ Angka: 123</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Input tidak valid\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ‚ùå Tidak ada exception, hanya false</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>üü¢ Keuntungan:</p>\n<ul>\n<li>Lebih cepat: Tidak perlu menangani exception.</li>\n<li>Lebih ringan: Tidak ada overhead stack trace exception.</li>\n<li>Lebih bersih: Error cukup dicek dengan if.</li>\n</ul>\n<p>‚úÖ Gunakan TryXXX() jika:</p>\n<ul>\n<li>Errornya biasa terjadi dan bisa ditangani secara normal.</li>\n<li>Ingin menghindari overhead exception.</li>\n<li>Butuh kode yang lebih bersih dan mudah dibaca.</li>\n</ul>\n<h2 id=\"result-object-pattern-eitherresult\" style=\"position:relative;\"><a href=\"#result-object-pattern-eitherresult\" aria-label=\"result object pattern eitherresult permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Result Object Pattern (Either/Result)</h2>\n<p>üí° <strong>Alih-alih melempar exception, fungsi mengembalikan objek hasil (success/failure).</strong><br>\nMirip dengan <code class=\"language-text\">TryXXX()</code>, tetapi lebih eksplisit dan sering digunakan dalam functional programming.  </p>\n<h3 id=\"contoh-1\" style=\"position:relative;\"><a href=\"#contoh-1\" aria-label=\"contoh 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Contoh</h3>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Result</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword type-declaration\">bool</span> <span class=\"token variable\">$success</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword type-declaration\">mixed</span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token operator\">?</span><span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$error</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token keyword type-hint\">bool</span> <span class=\"token variable\">$success</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">mixed</span> <span class=\"token variable\">$value</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span><span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$error</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">success</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$success</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">value</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">error</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$error</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">success</span><span class=\"token punctuation\">(</span><span class=\"token keyword type-hint\">mixed</span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword return-type\">self</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">(</span><span class=\"token constant boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">failure</span><span class=\"token punctuation\">(</span><span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$error</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword return-type\">self</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">(</span><span class=\"token constant boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$error</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Contoh penggunaan:</span>\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getUserRole</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token class-name return-type\">Result</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$role</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">Role</span><span class=\"token operator\">::</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'user'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$role</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name static-context\">Result</span><span class=\"token operator\">::</span><span class=\"token function\">failure</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"User role not found\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token class-name static-context\">Result</span><span class=\"token operator\">::</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$role</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Menggunakan hasil:</span>\n<span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token function\">getUserRole</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token operator\">-></span><span class=\"token property\">success</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Role ditemukan: \"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$result</span><span class=\"token operator\">-></span><span class=\"token property\">value</span><span class=\"token operator\">-></span><span class=\"token property\">name</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Error: \"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$result</span><span class=\"token operator\">-></span><span class=\"token property\">error</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>‚úÖ <strong>Keuntungan</strong>:</p>\n<ul>\n<li>Tidak perlu menangkap exception.  </li>\n<li>Hasil lebih eksplisit (<code class=\"language-text\">success</code> atau <code class=\"language-text\">failure</code>).  </li>\n<li>Bisa membawa data sukses atau pesan error tanpa memengaruhi flow program.  </li>\n</ul>\n<h2 id=\"null-object-pattern\" style=\"position:relative;\"><a href=\"#null-object-pattern\" aria-label=\"null object pattern permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Null Object Pattern</h2>\n<p>üí° <strong>Mengembalikan objek ‚Äúkosong‚Äù atau ‚Äúdummy‚Äù sebagai pengganti null, sehingga kode tetap berjalan.</strong><br>\nAlih-alih melempar exception atau mengembalikan <code class=\"language-text\">null</code>, gunakan objek default agar kode tetap berjalan tanpa error.  </p>\n<h3 id=\"contoh-2\" style=\"position:relative;\"><a href=\"#contoh-2\" aria-label=\"contoh 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Contoh</h3>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">NullUserRole</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword type-declaration\">string</span> <span class=\"token variable\">$name</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'Guest'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getUserRole</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">Role</span><span class=\"token operator\">|</span><span class=\"token class-name\">NullUserRole</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token class-name static-context\">Role</span><span class=\"token operator\">::</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'user'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">??</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NullUserRole</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Tidak perlu cek null, bisa langsung digunakan</span>\n<span class=\"token variable\">$role</span> <span class=\"token operator\">=</span> <span class=\"token function\">getUserRole</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Role: \"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$role</span><span class=\"token operator\">-></span><span class=\"token property\">name</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Jika tidak ada, akan mencetak \"Guest\"</span></code></pre></div>\n<p>‚úÖ <strong>Keuntungan</strong>:</p>\n<ul>\n<li>Menghindari <strong>null checks berulang</strong> (<code class=\"language-text\">if ($var !== null)</code>).  </li>\n<li>Kode lebih aman, tidak perlu menangani <code class=\"language-text\">null</code>.  </li>\n<li>Tidak memicu exception yang tidak perlu.  </li>\n</ul>\n<h2 id=\"guard-clause-pattern\" style=\"position:relative;\"><a href=\"#guard-clause-pattern\" aria-label=\"guard clause pattern permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Guard Clause Pattern</h2>\n<p>üí° <strong>Menghentikan eksekusi lebih awal daripada membuat banyak if-else bersarang.</strong>  </p>\n<h3 id=\"tanpa-guard-clause-kurang-rapi\" style=\"position:relative;\"><a href=\"#tanpa-guard-clause-kurang-rapi\" aria-label=\"tanpa guard clause kurang rapi permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tanpa Guard Clause (Kurang Rapi)</h3>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">processOrder</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$order</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$order</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$order</span><span class=\"token operator\">-></span><span class=\"token function\">isPaid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$order</span><span class=\"token operator\">-></span><span class=\"token function\">hasStock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token function\">shipOrder</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$order</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Stock not available\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Order not paid\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Order not found\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"dengan-guard-clause-lebih-rapi\" style=\"position:relative;\"><a href=\"#dengan-guard-clause-lebih-rapi\" aria-label=\"dengan guard clause lebih rapi permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dengan Guard Clause (Lebih Rapi)</h3>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">processOrder</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$order</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$order</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token class-name static-context\">Result</span><span class=\"token operator\">::</span><span class=\"token function\">failure</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Order not found\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$order</span><span class=\"token operator\">-></span><span class=\"token function\">isPaid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token class-name static-context\">Result</span><span class=\"token operator\">::</span><span class=\"token function\">failure</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Order not paid\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$order</span><span class=\"token operator\">-></span><span class=\"token function\">hasStock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token class-name static-context\">Result</span><span class=\"token operator\">::</span><span class=\"token function\">failure</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Stock not available\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">shipOrder</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$order</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token class-name static-context\">Result</span><span class=\"token operator\">::</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Order shipped\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>‚úÖ <strong>Keuntungan</strong>:</p>\n<ul>\n<li><strong>Menghindari nested if yang dalam</strong>.  </li>\n<li><strong>Lebih mudah dibaca</strong> karena error ditangani lebih awal.  </li>\n<li><strong>Lebih ringan</strong> dibanding exception.  </li>\n</ul>\n<h2 id=\"fallback-value-pattern\" style=\"position:relative;\"><a href=\"#fallback-value-pattern\" aria-label=\"fallback value pattern permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Fallback Value Pattern</h2>\n<p>üí° <strong>Jika suatu nilai tidak tersedia, gunakan nilai default sebagai fallback.</strong>  </p>\n<h3 id=\"contoh-3\" style=\"position:relative;\"><a href=\"#contoh-3\" aria-label=\"contoh 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Contoh</h3>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getDiscount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword return-type\">float</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">getUserDiscount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">??</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Jika tidak ada diskon, gunakan 0.0</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>‚úÖ <strong>Keuntungan</strong>:</p>\n<ul>\n<li>Menghindari error karena nilai kosong.  </li>\n<li>Lebih fleksibel tanpa harus melempar exception.</li>\n</ul>","frontmatter":{"title":"Alternatif Pattern untuk Menangani Error","date":"March 22, 2025"}}},"pageContext":{"slug":"/2025/03/alternatif-pattern-untuk-menangani-error/","previous":{"fields":{"slug":"/2025/03/sisi-lain-dari-small-functions/"},"frontmatter":{"title":"Sisi Lain dari Small Functions"}},"next":{"fields":{"slug":"/2025/04/kurva-performa-dan-waktu-ketika-ngoding-tak-lagi-sekadar-ngoding/"},"frontmatter":{"title":"Kurva Performa dan Waktu: Ketika Ngoding Tak Lagi Sekadar Ngoding"}}}},"staticQueryHashes":["2486386679","3128451518"]}