{"componentChunkName":"component---src-templates-blog-post-js","path":"/2021/09/mengirim-email-menggunakan-mailgun-laravel/","result":{"data":{"site":{"siteMetadata":{"title":"Dev Jurnal","author":"mmdmthr","siteUrl":"https://mmdmthr.github.io","comment":{"disqusShortName":"","utterances":"mmdmthr/devjurnal"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"fffbfbdb-2180-51d8-838c-2c38d518e49c","excerpt":"Laravel menyediakan API email yang sederhana menggunakan library SwiftMailer. \nLayanan email pada Laravel dapat dikonfigurasi melalui file . \nSalah satu penyedia layanan mailer yang tersedia adalah Mailgun. \nMailgun menyediakan driver email berbasis API yang lebih sederhana danâ€¦","html":"<p>Laravel menyediakan API email yang sederhana menggunakan library SwiftMailer.\nLayanan email pada Laravel dapat dikonfigurasi melalui file <code class=\"language-text\">config/mail.php</code>.\nSalah satu penyedia layanan mailer yang tersedia adalah Mailgun.\nMailgun menyediakan driver email berbasis API yang lebih sederhana dan singkat\ndibanding mengirim email menggunakan SMTP server. </p>\n<p>Untuk menggunakan driver Mailgun yang berbasis API, Laravel membutuhkan\nlibrary Guzzle HTTP, install dulu dari composer package manager</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\">composer <span class=\"token keyword\">require</span> guzzlehttp<span class=\"token operator\">/</span>guzzle</code></pre></div>\n<p>Secara default, file konfigurasi <code class=\"language-text\">config/mail.php</code> akan mengambil nilai\ndari variabel pada file <code class=\"language-text\">.env</code>. Maka kita akan menyimpan semua konfigurasi pada file <code class=\"language-text\">.env</code>. </p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token comment\">// setting mail driver yang digunakan</span>\n<span class=\"token constant\">MAIL_DRIVER</span><span class=\"token operator\">=</span>mailgun\n<span class=\"token comment\">// email from (email pengirim)</span>\n<span class=\"token constant\">MAIL_FROM</span><span class=\"token operator\">=</span>admin@apps<span class=\"token operator\">.</span>com\n<span class=\"token comment\">// nama pengirim</span>\n<span class=\"token constant\">MAIL_FROM_NAME</span><span class=\"token operator\">=</span>Admin\n<span class=\"token comment\">// domain mailgun kita</span>\n<span class=\"token constant\">MAILGUN_DOMAIN</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>domain<span class=\"token operator\">-</span>mailgun<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// API key mailgun kita</span>\n<span class=\"token constant\">MAILGUN_SECRET</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>api<span class=\"token operator\">-</span>key<span class=\"token operator\">-</span>mailgun<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Domain dan API key mailgun bisa kita dapatkan setelah melakukan registrasi Mailgun.\nKita dapat melihatnya pada dashboard.</p>\n<p>Petunjuk ketika mengalami error saat mengirimkan email dapat melihat referensi status code <a href=\"https://documentation.mailgun.com/en/latest/api-intro.html#status-codes\">https://documentation.mailgun.com/en/latest/api-intro.html#status-codes</a></p>","frontmatter":{"title":"Mengirim Email Menggunakan Mailgun pada Laravel","date":"September 18, 2021"}}},"pageContext":{"slug":"/2021/09/mengirim-email-menggunakan-mailgun-laravel/","previous":{"fields":{"slug":"/2021/08/5-singkatan-prinsip-pemrograman/"},"frontmatter":{"title":"5 Singkatan Prinsip Pemrograman"}},"next":{"fields":{"slug":"/2021/10/menghapus-git-branch-local-dan-remote/"},"frontmatter":{"title":"Menghapus Git Branch Local dan Remote"}}}},"staticQueryHashes":["2486386679","3128451518"]}