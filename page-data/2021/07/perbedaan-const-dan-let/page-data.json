{"componentChunkName":"component---src-templates-blog-post-js","path":"/2021/07/perbedaan-const-dan-let/","result":{"data":{"site":{"siteMetadata":{"title":"Dev Jurnal","author":"mmdmthr","siteUrl":"https://mmdmthr.github.io","comment":{"disqusShortName":"","utterances":"mmdmthr/devjurnal"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"9b0b9161-af3a-5bff-88c8-687ed176cc51","excerpt":"Sampai tahun 2015 JavaScript menggunakan  untuk mendeklarasikan variabel.\nSejak ES6 muncul  dan  digunakan untuk mendeklarasikan variabel. \nApa perbedaan keduanya? Kita bisa lihat dari karakteristik berikut:  harus diinisialisasi saat deklarasi Menyebabkan error . \nKetikaâ€¦","html":"<p>Sampai tahun 2015 JavaScript menggunakan <code class=\"language-text\">var</code> untuk mendeklarasikan variabel.\nSejak ES6 muncul <code class=\"language-text\">const</code> dan <code class=\"language-text\">let</code> digunakan untuk mendeklarasikan variabel.\nApa perbedaan keduanya? Kita bisa lihat dari karakteristik berikut:</p>\n<ol>\n<li>\n<p><code class=\"language-text\">const</code> harus diinisialisasi saat deklarasi</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> a</code></pre></div>\n<p>Menyebabkan error <code class=\"language-text\">SyntaxError: Missing initializer in const declaration</code>.\nKetika mendeklarasikan variabel harus menginisialisasi sebuah nilai</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span></code></pre></div>\n<p>Sedangkan pendeklarasian <code class=\"language-text\">let</code> tidak harus dengan inisialisasi nilai</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">let</span> a\na <span class=\"token operator\">=</span> <span class=\"token number\">1</span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">const</code> tidak dapat di-<em>assign</em> ulang nilainya setelah diinisialisasi</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\na <span class=\"token operator\">=</span> <span class=\"token number\">2</span></code></pre></div>\n<p>Menyebabkan error <code class=\"language-text\">TypeError: Assignment to constant variable</code>,\nsementara <code class=\"language-text\">let</code> dapat di-<em>assign</em> ulang nilainya</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\na <span class=\"token operator\">=</span> <span class=\"token number\">2</span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">const</code> dan <code class=\"language-text\">let</code> tidak dapat dideklarasikan ulang</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n<span class=\"token comment\">//</span>\n<span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token number\">2</span></code></pre></div>\n<p>Menyebabkan error <code class=\"language-text\">SyntaxError: Identifier 'a' has already been declared</code></p>\n</li>\n</ol>\n<p>Lalu apa faedahnya? Paling aman gunakan <code class=\"language-text\">const</code>, kecuali kita tahu persis akan melakukan\nperubahan nilai dari variabel yang kita buat. Jika sebuah variabel tidak\nbisa diubah nilainya maka itu akan mengurangi kemungkinan bug yang disebebabkan oleh\nnilai variabel yang tidak sengaja berubah.</p>","frontmatter":{"title":"Perbedaan const dan let","date":"July 24, 2021"}}},"pageContext":{"slug":"/2021/07/perbedaan-const-dan-let/","previous":{"fields":{"slug":"/2021/07/javascript-truthy-dan-falsy/"},"frontmatter":{"title":"JavaScript Truthy dan Falsy"}},"next":{"fields":{"slug":"/2021/07/normalisasi-database/"},"frontmatter":{"title":"Normalisasi Database"}}}},"staticQueryHashes":["2486386679","3128451518"]}