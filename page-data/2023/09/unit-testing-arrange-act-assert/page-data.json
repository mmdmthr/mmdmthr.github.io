{"componentChunkName":"component---src-templates-blog-post-js","path":"/2023/09/unit-testing-arrange-act-assert/","result":{"data":{"site":{"siteMetadata":{"title":"Dev Jurnal","author":"mmdmthr","siteUrl":"https://mmdmthr.github.io","comment":{"disqusShortName":"","utterances":"mmdmthr/devjurnal"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"f8bb96d5-79f6-50ba-b0eb-dd05ac78db01","excerpt":"Unit testing adalah salah satu praktik yang penting dalam pengembangan perangkat lunak yang membantu memastikan bahwa kode kita berfungsi dengan benar. Kita dapat menggunakan pendekatan Arrange, Act, dan Assert (AAA) untuk membuat unit test yang efektif.  1. Arrange Mengeset…","html":"<p>Unit testing adalah salah satu praktik yang penting dalam pengembangan perangkat lunak yang membantu memastikan bahwa kode kita berfungsi dengan benar. Kita dapat menggunakan pendekatan <em>Arrange</em>, <em>Act</em>, dan <em>Assert</em> (AAA) untuk membuat unit test yang efektif. </p>\n<h3 id=\"1-arrange\" style=\"position:relative;\"><a href=\"#1-arrange\" aria-label=\"1 arrange permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. <em>Arrange</em></h3>\n<p>Mengeset input dan target. Langkah-langkah pengaturan ini dilakukan untuk menyiapkan sebuah kasus pengujian. Pikirkan apakah tes ini memerlukan objek atau pengaturan khusus? Apakah perlu menyiapkan database? Apakah perlu masuk ke aplikasi web atau membuat sebuah request http? Tangani semua operasi ini di bagian awal pengujian.</p>\n<h3 id=\"2-act\" style=\"position:relative;\"><a href=\"#2-act\" aria-label=\"2 act permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. <em>Act</em></h3>\n<p>Jalankan perilaku (<em>behavior</em>) yang ditargetkan. Langkah-langkah <em>act</em> ini mencakup hal utama yang akan diuji. Ini bisa berupa pemanggilan fungsi atau metode, pemanggilan REST API, atau interaksi dengan halaman web. Jaga agar tindakan yang dijalankan tetap fokus pada perilaku sasaran.</p>\n<h3 id=\"3-assert\" style=\"position:relative;\"><a href=\"#3-assert\" aria-label=\"3 assert permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. <em>Assert</em></h3>\n<p>Periksa hasil yang diharapkan. Hasil dari menjalankan langkah act harus menimbulkan semacam respons. Nah, langkah assert ini adalah saat kita memverifikasi benar atau salahnya respons tersebut. Contohnya memeriksa nilai numerik atau string, mengecek response berupa json. Atau, kita mungkin memerlukan pemeriksaan beberapa aspek dari suatu sistem. Assertion pada akhirnya akan menentukan apakah pengujian berhasil atau gagal.</p>\n<h2 id=\"contoh\" style=\"position:relative;\"><a href=\"#contoh\" aria-label=\"contoh permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Contoh</h2>\n<p>Kita akan melihat contoh penggunaan AAA dalam unit testing dengan Laravel.</p>\n<p>Bayangkan kita memiliki sebuah model Laravel yang sederhana untuk mengelola buku. Kita ingin menguji method <code class=\"language-text\">hitungJumlahBuku</code> yang bertanggung jawab menghitung jumlah total buku dalam database.</p>\n<h3 id=\"langkah-1-atur-arrange\" style=\"position:relative;\"><a href=\"#langkah-1-atur-arrange\" aria-label=\"langkah 1 atur arrange permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Langkah 1: Atur (Arrange)</h3>\n<p>Pertama, kita akan menyiapkan kondisi awal untuk tes kita. Ini mungkin melibatkan pengaturan database tes, membuat objek model, atau mempersiapkan kondisi lain yang diperlukan.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">testHitungJumlahBuku</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Membuat beberapa buku dalam basis data tes</span>\n    <span class=\"token class-name static-context\">Buku</span><span class=\"token operator\">::</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'judul'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'Buku 1'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'penulis'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'Penulis 1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name static-context\">Buku</span><span class=\"token operator\">::</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'judul'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'Buku 2'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'penulis'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'Penulis 2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// Membuat objek model</span>\n    <span class=\"token variable\">$buku</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Buku</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// Act</span>\n    <span class=\"token variable\">$jumlahBuku</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$buku</span><span class=\"token operator\">-></span><span class=\"token function\">hitungJumlahBuku</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// Verifikasi (Assert)</span>\n    <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">assertEquals</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$jumlahBuku</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Pada langkah ini, kita membuat beberapa buku dalam database tes dan kemudian membuat objek model Buku.</p>\n<h3 id=\"langkah-2-lakukan-act\" style=\"position:relative;\"><a href=\"#langkah-2-lakukan-act\" aria-label=\"langkah 2 lakukan act permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Langkah 2: Lakukan (Act)</h3>\n<p>Kemudian, kita menjalankan metode atau fungsi yang ingin kita uji. Dalam hal ini, kita memanggil metode <code class=\"language-text\">hitungJumlahBuku</code> dari objek model <code class=\"language-text\">Buku</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$jumlahBuku</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$buku</span><span class=\"token operator\">-></span><span class=\"token function\">hitungJumlahBuku</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"langkah-3-verifikasi-assert\" style=\"position:relative;\"><a href=\"#langkah-3-verifikasi-assert\" aria-label=\"langkah 3 verifikasi assert permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Langkah 3: Verifikasi (Assert)</h3>\n<p>Langkah terakhir adalah memverifikasi hasil tes dengan menggunakan pernyataan “assert” untuk memeriksa apakah hasilnya sesuai dengan harapan kita.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">assertEquals</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$jumlahBuku</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Dalam contoh ini, kita memeriksa apakah <code class=\"language-text\">$jumlahBuku</code> sama dengan 2, karena kita telah menambahkan dua buku ke dalam basis data tes pada langkah pertama.</p>\n<p>Jika semua tes berjalan dengan sukses, kita akan melihat pesan bahwa tes tersebut berhasil. Namun, jika ada kesalahan dalam kode atau hasilnya tidak sesuai dengan harapan, kita akan melihat pesan kesalahan yang membantu kita melacak masalahnya.</p>\n<p>Dengan menggunakan pendekatan <em>Arrange</em>, <em>Act</em>, dan <em>Assert</em> dalam unit testing, kita dapat memastikan bahwa kode kita berfungsi dengan benar dan dapat mengidentifikasi masalah lebih awal dalam siklus pengembangan. Unit testing adalah salah satu praktik terbaik dalam pengembangan perangkat lunak yang dapat meningkatkan keandalan dan kualitas perangkat lunak kita secara keseluruhan.</p>","frontmatter":{"title":"Unit Testing dengan Pendekatan Arrange, Act, dan Assert","date":"September 20, 2023"}}},"pageContext":{"slug":"/2023/09/unit-testing-arrange-act-assert/","previous":{"fields":{"slug":"/2023/09/review-the-odin-project/"},"frontmatter":{"title":"Review Coding Bootcamp Online Gratis The Odin Project"}},"next":{"fields":{"slug":"/2023/09/masalah-n-1-orm/"},"frontmatter":{"title":"Memahami Masalah N + 1 dalam ORM"}}}},"staticQueryHashes":["2486386679","3128451518"]}