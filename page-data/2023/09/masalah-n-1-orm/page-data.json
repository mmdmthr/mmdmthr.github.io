{"componentChunkName":"component---src-templates-blog-post-js","path":"/2023/09/masalah-n-1-orm/","result":{"data":{"site":{"siteMetadata":{"title":"Dev Jurnal","author":"mmdmthr","siteUrl":"https://mmdmthr.github.io","comment":{"disqusShortName":"","utterances":"mmdmthr/devjurnal"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"8d3fe066-ed1a-5bad-ba4e-4497ede93a9c","excerpt":"Dalam pengembangan perangkat lunak, masalah N + 1 adalah salah satu masalah klasik yang sering dihadapi oleh pengembang aplikasi yang menggunakan database. Masalah ini muncul saat kita menggunakan Object-Relational Mapping (ORM) untuk mengakses data dari database, dan dapatâ€¦","html":"<p>Dalam pengembangan perangkat lunak, masalah N + 1 adalah salah satu masalah klasik yang sering dihadapi oleh pengembang aplikasi yang menggunakan database. Masalah ini muncul saat kita menggunakan <em>Object-Relational Mapping</em> (ORM) untuk mengakses data dari database, dan dapat menyebabkan kinerja aplikasi yang buruk jika tidak ditangani dengan benar. </p>\n<h2 id=\"apa-itu-masalah-n--1\" style=\"position:relative;\"><a href=\"#apa-itu-masalah-n--1\" aria-label=\"apa itu masalah n  1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Apa Itu Masalah N + 1?</h2>\n<p>Masalah N + 1 terjadi ketika kita mengambil kumpulan data utama, misalnya mengambil data buku dari database, dan kemudian mengambil data terkait, misalnya penulis, secara terpisah untuk setiap entitas utama. N + 1 artinya kita melakukan satu query utama untuk mengambil daftar entitas utama, dan kemudian tambahan sejumlah N query untuk mengambil data terkaitnya.</p>\n<p>Contoh sederhana adalah ketika kita memiliki daftar buku dan kita ingin mengambil penulis masing-masing buku. </p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Models<span class=\"token punctuation\">\\</span>Book</span><span class=\"token punctuation\">;</span>\n \n<span class=\"token variable\">$books</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">Book</span><span class=\"token operator\">::</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Jika kita mengambil daftar buku terlebih dahulu, itu akan menjalankan 1 query. </p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> books</code></pre></div>\n<p>Misalnya query di atas hasilnya adalah 25 buku. Kemudian kita mengambil penulis dari setiap buku secara terpisah.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$books</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$book</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token variable\">$book</span><span class=\"token operator\">-></span><span class=\"token property\">author</span><span class=\"token operator\">-></span><span class=\"token property\">name</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>maka akan ada tambahan 25 query</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> name <span class=\"token keyword\">from</span> authors <span class=\"token keyword\">where</span> id <span class=\"token operator\">=</span> <span class=\"token number\">123</span></code></pre></div>\n<p>Itulah yang disebut masalah N + 1. </p>\n<h2 id=\"mengapa-masalah-n--1-terjadi\" style=\"position:relative;\"><a href=\"#mengapa-masalah-n--1-terjadi\" aria-label=\"mengapa masalah n  1 terjadi permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mengapa Masalah N + 1 Terjadi?</h2>\n<p>Masalah N + 1 terjadi karena ORM, biasanya menggunakan <em>lazy loading</em> sebagai perilaku default. Artinya, data terkait tidak dimuat segera ketika data utama diambil, tetapi dimuat hanya saat kita mengaksesnya. Ini mengarah pada banyak query tambahan yang tidak perlu.</p>\n<h2 id=\"cara-mengatasi-masalah-n--1\" style=\"position:relative;\"><a href=\"#cara-mengatasi-masalah-n--1\" aria-label=\"cara mengatasi masalah n  1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cara Mengatasi Masalah N + 1</h2>\n<p>Untuk mengatasi masalah N + 1, kita dapat menggunakan beberapa teknik berikut:</p>\n<h3 id=\"1-eager-loading\" style=\"position:relative;\"><a href=\"#1-eager-loading\" aria-label=\"1 eager loading permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Eager Loading</h3>\n<p><em>Eager loading</em> adalah teknik di mana kita mengambil data terkait sekaligus dengan data utama, bukan secara terpisah. Dalam Laravel, kita dapat menggunakan metode <code class=\"language-text\">with()</code> untuk melakukan <em>eager loading</em>:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$users</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">Book</span><span class=\"token operator\">::</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'author'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Dengan menggunakan <em>eager loading</em>, kita mengurangi jumlah query yang harus dilakukan ke database menjadi hanya 2 query, menghindari masalah N + 1.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> books\n \n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> authors <span class=\"token keyword\">where</span> id <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"2-join\" style=\"position:relative;\"><a href=\"#2-join\" aria-label=\"2 join permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Join</h3>\n<p>Jika kita ingin menggabungkan data dari beberapa tabel, kita dapat menggunakan operasi join dalam SQL. Dalam Eloquent, kita dapat menggunakan metode <code class=\"language-text\">join()</code> untuk melakukan join data:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$users</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">DB</span><span class=\"token operator\">::</span><span class=\"token function\">table</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'books'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token operator\">-></span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'authors'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'books.author_id'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'='</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'authors.id'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token operator\">-></span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'books.*'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'authors.name'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token operator\">-></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"3-batch-loading\" style=\"position:relative;\"><a href=\"#3-batch-loading\" aria-label=\"3 batch loading permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Batch Loading</h3>\n<p>Jika kita memiliki kasus di mana kita perlu mengambil banyak data terkait untuk setiap entitas utama, kita dapat menggunakan teknik <em>batch loading</em>. Di Laravel ini disebut <em>lazy eager loading</em>. Ini melibatkan pengambilan data utama, dan kemudian mengambil data terkait dalam beberapa <em>batch query</em>.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$users</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">Book</span><span class=\"token operator\">::</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$books</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$book</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$user</span><span class=\"token operator\">-></span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'authors'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"4-gunakan-cache\" style=\"position:relative;\"><a href=\"#4-gunakan-cache\" aria-label=\"4 gunakan cache permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. Gunakan Cache</h3>\n<p>Untuk menghindari pengambilan data terkait yang berulang-ulang, kita dapat menggunakan teknik caching. Caching akan menyimpan data terkait dalam cache sehingga kita tidak perlu mengambilnya lagi dalam permintaan berikutnya.</p>","frontmatter":{"title":"Memahami Masalah N + 1 dalam ORM","date":"September 27, 2023"}}},"pageContext":{"slug":"/2023/09/masalah-n-1-orm/","previous":{"fields":{"slug":"/2023/09/unit-testing-arrange-act-assert/"},"frontmatter":{"title":"Unit Testing dengan Pendekatan Arrange, Act, dan Assert"}},"next":{"fields":{"slug":"/2023/10/membaca-flame-graph/"},"frontmatter":{"title":"Membaca Flame Graph"}}}},"staticQueryHashes":["2486386679","3128451518"]}