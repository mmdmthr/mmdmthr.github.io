{"componentChunkName":"component---src-templates-blog-post-js","path":"/2023/05/menulis-acceptance-test-dengan-given-when-then/","result":{"data":{"site":{"siteMetadata":{"title":"Dev Jurnal","author":"mmdmthr","siteUrl":"https://mmdmthr.github.io","comment":{"disqusShortName":"","utterances":"mmdmthr/devjurnal"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"c6f1fad1-cb4c-56f1-a342-e4dda8be4a63","excerpt":"Dalam pengembangan perangkat lunak, Given-When-Then merupakan sebuah formula atau template yang bertujuan untuk memandu penulisan acceptance test (pengujian penerimaan) terhadap User Story. Formula ini terdiri dari tiga bagian, yaitu: (Given) beberapa konteks atau kondisi awal…","html":"<p>Dalam pengembangan perangkat lunak, <em>Given-When-Then</em> merupakan sebuah formula atau template yang bertujuan untuk memandu penulisan <em>acceptance test</em> (pengujian penerimaan) terhadap <em>User Story</em>. Formula ini terdiri dari tiga bagian, yaitu:</p>\n<ul>\n<li>(<em>Given</em>) beberapa konteks atau kondisi awal</li>\n<li>(<em>When</em>) aksi atau tindakan tertentu yang dilakukan</li>\n<li>(<em>Then</em>) sejumlah konsekuensi yang dapat diamati (seharusnya terjadi)</li>\n</ul>\n<p>Contoh penggunaan formula <em>Given-When-Then</em>:</p>\n<ul>\n<li><em>Given my bank account is in credit, and I made no withdrawals recently</em> (saldo rekening bank saya mencukupi dan saya belum melakukan penarikan dana baru-baru ini),</li>\n<li><em>When I attempt to withdraw an amount less than my card’s limit</em> (saya mencoba menarik dana dalam jumlah kurang dari batas kartu saya),</li>\n<li><em>Then a particular set of observable consequences should obtain</em> (penarikan dana harus berhasil tanpa adanya kesalahan atau peringatan),</li>\n</ul>\n<h3 id=\"manfaat\" style=\"position:relative;\"><a href=\"#manfaat\" aria-label=\"manfaat permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Manfaat</h3>\n<p>Formula <em>Given-When-Then</em> membantu dalam merancang <em>acceptance test</em> dengan lebih terstruktur dan jelas. Bagian <em>Given</em> memberikan konteks atau kondisi awal yang diperlukan sebelum menjalankan aksi atau tindakan. Bagian <em>When</em> menyatakan aksi atau tindakan yang akan diuji. Sedangkan bagian <em>Then</em> menyatakan hasil atau konsekuensi yang diharapkan setelah aksi dilakukan.</p>\n<p>Dengan menggunakan formula ini, tim pengembang perangkat lunak dapat memastikan bahwa <em>User Story</em> atau cerita pengguna telah memenuhi persyaratan yang telah ditentukan. Penggunaan formula <em>Given-When-Then</em> juga membantu mempermudah komunikasi antara anggota tim pengembang (<em>developer</em>), penguji (QA), dan pemangku kepentingan lainnya, sehingga meminimalkan risiko kesalahpahaman.</p>\n<p>Dalam praktiknya, formula <em>Given-When-Then</em> dapat digunakan secara berulang untuk menulis skenario pengujian <em>acceptance test</em> yang berbeda-beda, sehingga memastikan bahwa aplikasi atau sistem yang dikembangkan berperilaku sesuai dengan harapan dan kebutuhan pengguna.</p>\n<p>Jadi, dengan menggunakan formula <em>Given-When-Then</em>, tim pengembang dapat lebih mudah menggambarkan konteks, tindakan, dan hasil yang diharapkan dalam pengujian <em>acceptance test</em>. Hal ini membantu memastikan kualitas dan keandalan perangkat lunak yang dikembangkan, serta meminimalisir risiko adanya <em>bug</em> atau kesalahan dalam sistem.</p>","frontmatter":{"title":"Menulis Acceptance Test dengan Formula Given-When-Then","date":"May 20, 2023"}}},"pageContext":{"slug":"/2023/05/menulis-acceptance-test-dengan-given-when-then/","previous":{"fields":{"slug":"/2023/05/kompromi-dalam-pengembangan-perangkat-lunak/"},"frontmatter":{"title":"Kompromi dalam Pengembangan Perangkat Lunak"}},"next":{"fields":{"slug":"/2023/05/panduan-facility-dan-severity-dalam-syslog/"},"frontmatter":{"title":"Mengenal RFC 5424 - Panduan untuk Facility dan Severity dalam Syslog"}}}},"staticQueryHashes":["2486386679","3128451518"]}