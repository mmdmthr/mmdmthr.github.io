{"componentChunkName":"component---src-templates-blog-post-js","path":"/2024/11/test-double-mock-dan-stub/","result":{"data":{"site":{"siteMetadata":{"title":"Dev Jurnal","author":"mmdmthr","siteUrl":"https://mmdmthr.github.io","comment":{"disqusShortName":"","utterances":"mmdmthr/devjurnal"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"fc089353-1e2a-5264-9214-637e2000404a","excerpt":"Gerard Meszaros memperkenalkan konsep Test Doubles dalam bukunya, “xUnit Test Patterns”, sebagai berikut: Kadang sulit untuk menguji sistem yang sedang diuji (System Under Test atau SUT) karena ia bergantung (memiliki dependency) pada komponen lain yang tidak bisa digunakan dalam…","html":"<p>Gerard Meszaros memperkenalkan konsep <em>Test Doubles</em> dalam bukunya, <em>“xUnit Test Patterns”</em>, sebagai berikut:</p>\n<blockquote>\n<p>Kadang sulit untuk menguji sistem yang sedang diuji (<em>System Under Test</em> atau SUT) karena ia bergantung (memiliki dependency) pada komponen lain yang tidak bisa digunakan dalam lingkungan testing. Ini bisa disebabkan karena komponen tersebut tidak tersedia, tidak mengembalikan hasil yang diperlukan untuk testing, atau karena menjalankannya akan menimbulkan efek samping yang tidak diinginkan. Dalam kasus lain, strategi testing kita mengharuskan kita memiliki lebih banyak kontrol atau visibilitas terhadap perilaku internal SUT.</p>\n</blockquote>\n<blockquote>\n<p>Ketika kita menulis testing di mana kita tidak bisa (atau memilih untuk tidak) menggunakan komponen yang sebenarnya diperlukan (DOC), kita bisa menggantinya dengan <em>Test Double</em>. <em>Test Double</em> tidak harus berperilaku persis seperti DOC asli; ia hanya perlu menyediakan API yang sama sehingga SUT berpikir bahwa ia adalah komponen yang asli!</p>\n</blockquote>\n<p>Konsep ini mengarahkan pada dua tipe <em>Test Doubles</em> utama yang sering digunakan: <em>Mocks</em> dan <em>Stubs</em>. Meskipun keduanya bertujuan untuk mensimulasikan komponen yang kompleks atau sulit diuji, mereka memiliki peran yang berbeda.</p>\n<h3 id=\"1-tujuan-dan-kegunaan\" style=\"position:relative;\"><a href=\"#1-tujuan-dan-kegunaan\" aria-label=\"1 tujuan dan kegunaan permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. <strong>Tujuan dan Kegunaan</strong></h3>\n<ul>\n<li>\n<p><strong>Stub</strong>:</p>\n<ul>\n<li>Stub adalah <em>test double</em> yang mengembalikan data yang telah ditentukan sebelumnya ke sistem yang sedang diuji. Stub digunakan untuk memberikan respons atau data dari dependensi yang tidak sedang diuji.</li>\n<li>Stubs biasanya digunakan ketika kita perlu mengontrol input untuk suatu fungsi atau kelas sehingga pengujian menjadi lebih sederhana.</li>\n<li>Contoh kasus penggunaan: Jika sebuah method bergantung pada data dari API eksternal, stub dapat mengembalikan data statis alih-alih melakukan panggilan API yang sebenarnya.</li>\n</ul>\n</li>\n<li>\n<p><strong>Mock</strong>:</p>\n<ul>\n<li>Mock tidak hanya menyediakan data, tetapi juga memungkinkan pengujian untuk memverifikasi bahwa perilaku atau interaksi tertentu terjadi ketika kode dijalankan. Mock mencatat dan memverifikasi bahwa method tertentu dipanggil dengan parameter yang diharapkan.</li>\n<li>Mock berguna ketika kita ingin menguji bagaimana sistem berinteraksi dengan dependensi, bukan sekadar data yang mereka kembalikan.</li>\n<li>Contoh kasus penggunaan: Saat menguji kelas yang mengirim email, mock dapat memverifikasi bahwa fungsi pengiriman email dipanggil dengan argumen yang benar.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-verifikasi-perilaku\" style=\"position:relative;\"><a href=\"#2-verifikasi-perilaku\" aria-label=\"2 verifikasi perilaku permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. <strong>Verifikasi Perilaku</strong></h3>\n<ul>\n<li>\n<p><strong>Stub</strong>:</p>\n<ul>\n<li>Stub umumnya tidak memverifikasi perilaku atau pemanggilan metode; mereka hanya menyediakan respons yang telah ditentukan sebelumnya.</li>\n<li>Fokusnya lebih pada memberikan respons sederhana yang membantu menguji fungsionalitas komponen yang sedang diuji.</li>\n</ul>\n</li>\n<li>\n<p><strong>Mock</strong>:</p>\n<ul>\n<li>Mock dapat memverifikasi apakah interaksi tertentu terjadi, seperti memeriksa apakah suatu metode dipanggil beberapa kali atau dengan argumen tertentu.</li>\n<li>Mock membantu dalam memverifikasi perilaku, di mana fokusnya adalah pada interaksi, bukan hanya output.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-implementasi\" style=\"position:relative;\"><a href=\"#3-implementasi\" aria-label=\"3 implementasi permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. <strong>Implementasi</strong></h3>\n<ul>\n<li>\n<p><strong>Stub</strong>:</p>\n<ul>\n<li>Stub seringkali lebih sederhana untuk diimplementasikan karena hanya melibatkan pengaturan respons untuk metode tertentu.</li>\n<li>Stubs umumnya tidak perlu mencatat pemanggilan metode atau nilai parameter.</li>\n</ul>\n</li>\n<li>\n<p><strong>Mock</strong>:</p>\n<ul>\n<li>Mock memerlukan pengaturan lebih lanjut karena mencakup fungsionalitas untuk melacak pemanggilan dan memverifikasi apakah komponen yang diuji berinteraksi sesuai harapan.</li>\n<li>Framework mocking (seperti Mockito untuk Java atau PHPUnit mocks untuk PHP) menyediakan alat untuk membuat objek mock dan menetapkan ekspektasi pada interaksi.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"perbandingan\" style=\"position:relative;\"><a href=\"#perbandingan\" aria-label=\"perbandingan permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Perbandingan</h3>\n<p>   Misalkan kita memiliki layanan yang mengambil informasi pengguna dari basis data dan mengirimkannya ke sistem lain:</p>\n<ul>\n<li><strong>Menggunakan Stub</strong>: Jika kita ingin menghindari pemanggilan basis data yang sebenarnya, kita dapat menggunakan stub untuk mengembalikan objek pengguna contoh tanpa membuat panggilan basis data nyata.</li>\n<li><strong>Menggunakan Mock</strong>: Jika kita ingin memastikan bahwa layanan tersebut benar-benar mencoba mengirim data pengguna dengan parameter yang tepat, kita bisa menggunakan mock untuk melacak interaksi ini dan memverifikasi bahwa metode dipanggil dengan argumen yang diharapkan.</li>\n</ul>\n<p>Ringkasnya, <em>stub menyediakan respons</em>, sementara <em>mock menyediakan respons dan memverifikasi perilaku</em>.</p>\n<h2 id=\"contoh\" style=\"position:relative;\"><a href=\"#contoh\" aria-label=\"contoh permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Contoh</h2>\n<h3 id=\"skenario\" style=\"position:relative;\"><a href=\"#skenario\" aria-label=\"skenario permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Skenario</h3>\n<p>Misalkan kita memiliki layanan-layanan berikut dalam aplikasi Laravel:</p>\n<ul>\n<li><strong>UserService</strong>: Mengambil detail pengguna (akan kita buat <em>stub</em>).</li>\n<li><strong>DiscountService</strong>: Menghitung diskon untuk pengguna (akan kita buat <em>stub</em>).</li>\n<li><strong>EmailService</strong>: Mengirim email notifikasi setelah pesanan diproses (akan kita buat <em>mock</em>).</li>\n</ul>\n<p>Selain itu, kita punya kelas <code class=\"language-text\">OrderProcessor</code> yang bertugas memproses pesanan, menghitung total dengan diskon yang berlaku, dan mengirim email konfirmasi.</p>\n<h3 id=\"langkah-1-membuat-kelas-orderprocessor\" style=\"position:relative;\"><a href=\"#langkah-1-membuat-kelas-orderprocessor\" aria-label=\"langkah 1 membuat kelas orderprocessor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Langkah 1: Membuat Kelas OrderProcessor</h3>\n<p>Berikut adalah versi sederhana dari kelas <code class=\"language-text\">OrderProcessor</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Services</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">OrderProcessor</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$userService</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$discountService</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$emailService</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$userService</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$discountService</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$emailService</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">userService</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$userService</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">discountService</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$discountService</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">emailService</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$emailService</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">calculateOrderTotal</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$userId</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$items</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$total</span> <span class=\"token operator\">=</span> <span class=\"token function\">array_sum</span><span class=\"token punctuation\">(</span><span class=\"token function\">array_column</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$items</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'price'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$discount</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">discountService</span><span class=\"token operator\">-></span><span class=\"token function\">getDiscountForUser</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$userId</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$total</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$total</span> <span class=\"token operator\">*</span> <span class=\"token variable\">$discount</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">processOrder</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$userId</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$items</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$total</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">calculateOrderTotal</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$userId</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$items</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token comment\">// Mengirim email konfirmasi</span>\n        <span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">userService</span><span class=\"token operator\">-></span><span class=\"token function\">getUserById</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$userId</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">emailService</span><span class=\"token operator\">-></span><span class=\"token function\">sendOrderConfirmation</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$user</span><span class=\"token operator\">-></span><span class=\"token property\">email</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$total</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<h3 id=\"langkah-2-menulis-tes-menggunakan-stubs-untuk-code-classlanguage-textcalculateordertotalcode\" style=\"position:relative;\"><a href=\"#langkah-2-menulis-tes-menggunakan-stubs-untuk-code-classlanguage-textcalculateordertotalcode\" aria-label=\"langkah 2 menulis tes menggunakan stubs untuk code classlanguage textcalculateordertotalcode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Langkah 2: Menulis Tes Menggunakan Stubs (Untuk <code class=\"language-text\">calculateOrderTotal</code>)</h3>\n<p>Di sini kita akan menguji bahwa <code class=\"language-text\">calculateOrderTotal</code> menerapkan diskon dengan benar. Kita akan menggunakan <em>stub</em> untuk <code class=\"language-text\">DiscountService</code> agar mengembalikan nilai diskon tertentu (misalnya 10%).</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">Tests<span class=\"token punctuation\">\\</span>Unit</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Services<span class=\"token punctuation\">\\</span>OrderProcessor</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">PHPUnit<span class=\"token punctuation\">\\</span>Framework<span class=\"token punctuation\">\\</span>TestCase</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">OrderProcessorTest</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">TestCase</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">testCalculateOrderTotalWithDiscount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Membuat stub untuk DiscountService</span>\n        <span class=\"token variable\">$discountServiceStub</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">createStub</span><span class=\"token punctuation\">(</span><span class=\"token class-name class-name-fully-qualified static-context\"><span class=\"token punctuation\">\\</span>App<span class=\"token punctuation\">\\</span>Services<span class=\"token punctuation\">\\</span>DiscountService</span><span class=\"token operator\">::</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Mengonfigurasi stub agar mengembalikan diskon statis 10%</span>\n        <span class=\"token variable\">$discountServiceStub</span><span class=\"token operator\">-></span><span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'getDiscountForUser'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">willReturn</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Dependensi lainnya (biarkan null untuk tes ini)</span>\n        <span class=\"token variable\">$userService</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">createStub</span><span class=\"token punctuation\">(</span><span class=\"token class-name class-name-fully-qualified static-context\"><span class=\"token punctuation\">\\</span>App<span class=\"token punctuation\">\\</span>Services<span class=\"token punctuation\">\\</span>UserService</span><span class=\"token operator\">::</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$emailService</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">createStub</span><span class=\"token punctuation\">(</span><span class=\"token class-name class-name-fully-qualified static-context\"><span class=\"token punctuation\">\\</span>App<span class=\"token punctuation\">\\</span>Services<span class=\"token punctuation\">\\</span>EmailService</span><span class=\"token operator\">::</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Membuat OrderProcessor dengan stubs</span>\n        <span class=\"token variable\">$orderProcessor</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OrderProcessor</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$userService</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$discountServiceStub</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$emailService</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Data pengujian</span>\n        <span class=\"token variable\">$userId</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$items</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'price'</span> <span class=\"token operator\">=></span> <span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'price'</span> <span class=\"token operator\">=></span> <span class=\"token number\">200</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Menghitung total dengan diskon 10%</span>\n        <span class=\"token variable\">$total</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$orderProcessor</span><span class=\"token operator\">-></span><span class=\"token function\">calculateOrderTotal</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$userId</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$items</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Memastikan total sesuai dengan perhitungan setelah diskon 10%</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">assertEquals</span><span class=\"token punctuation\">(</span><span class=\"token number\">270</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$total</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// (100 + 200) - 10%</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>Pada tes ini, kita hanya perlu mengecek output dari <code class=\"language-text\">calculateOrderTotal</code>, sehingga kita menggunakan <em>stub</em> untuk mengembalikan nilai diskon 10% tanpa memverifikasi interaksi apa pun di kode dalam fungsi tersebut.</p>\n<h3 id=\"langkah-3-menulis-tes-menggunakan-mocks-untuk-code-classlanguage-textprocessordercode\" style=\"position:relative;\"><a href=\"#langkah-3-menulis-tes-menggunakan-mocks-untuk-code-classlanguage-textprocessordercode\" aria-label=\"langkah 3 menulis tes menggunakan mocks untuk code classlanguage textprocessordercode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Langkah 3: Menulis Tes Menggunakan Mocks (Untuk <code class=\"language-text\">processOrder</code>)</h3>\n<p>Selanjutnya, kita akan menguji bahwa <code class=\"language-text\">processOrder</code> mengirim email konfirmasi setelah memproses pesanan. Kita menggunakan <em>mock</em> untuk memverifikasi bahwa metode <code class=\"language-text\">sendOrderConfirmation</code> pada <code class=\"language-text\">EmailService</code> dipanggil dengan argumen yang benar.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">Tests<span class=\"token punctuation\">\\</span>Unit</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Services<span class=\"token punctuation\">\\</span>OrderProcessor</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Services<span class=\"token punctuation\">\\</span>UserService</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Services<span class=\"token punctuation\">\\</span>DiscountService</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Services<span class=\"token punctuation\">\\</span>EmailService</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">PHPUnit<span class=\"token punctuation\">\\</span>Framework<span class=\"token punctuation\">\\</span>TestCase</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">OrderProcessorTest</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">TestCase</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">testProcessOrderSendsEmail</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Membuat stub untuk UserService dan DiscountService</span>\n        <span class=\"token variable\">$userServiceStub</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">createStub</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">UserService</span><span class=\"token operator\">::</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$discountServiceStub</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">createStub</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">DiscountService</span><span class=\"token operator\">::</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Mengonfigurasi UserService stub untuk mengembalikan objek user yang kita buat sendiri</span>\n        <span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\"><span class=\"token punctuation\">\\</span>stdClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$user</span><span class=\"token operator\">-></span><span class=\"token property\">email</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'user@example.com'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$userServiceStub</span><span class=\"token operator\">-></span><span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'getUserById'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">willReturn</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$user</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Mengonfigurasi DiscountService stub untuk mengembalikan diskon 10%</span>\n        <span class=\"token variable\">$discountServiceStub</span><span class=\"token operator\">-></span><span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'getDiscountForUser'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">willReturn</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Membuat mock untuk EmailService</span>\n        <span class=\"token variable\">$emailServiceMock</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">createMock</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">EmailService</span><span class=\"token operator\">::</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Menetapkan ekspektasi: `sendOrderConfirmation` harus dipanggil sekali dengan argumen 'user@example.com'</span>\n        <span class=\"token variable\">$emailServiceMock</span><span class=\"token operator\">-></span><span class=\"token function\">expects</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">once</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                         <span class=\"token operator\">-></span><span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'sendOrderConfirmation'</span><span class=\"token punctuation\">)</span>\n                         <span class=\"token operator\">-></span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">equalTo</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'user@example.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Membuat OrderProcessor dengan stubs dan mock</span>\n        <span class=\"token variable\">$orderProcessor</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OrderProcessor</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$userServiceStub</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$discountServiceStub</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$emailServiceMock</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Data pengujian</span>\n        <span class=\"token variable\">$userId</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$items</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'price'</span> <span class=\"token operator\">=></span> <span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'price'</span> <span class=\"token operator\">=></span> <span class=\"token number\">200</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Memanggil processOrder dan memverifikasi bahwa email dikirim</span>\n        <span class=\"token variable\">$orderProcessor</span><span class=\"token operator\">-></span><span class=\"token function\">processOrder</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$userId</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$items</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>Pada tes ini:</p>\n<ul>\n<li>Kita <em>mock</em> <code class=\"language-text\">EmailService</code> karena kita ingin memverifikasi bahwa <code class=\"language-text\">sendOrderConfirmation</code> dipanggil dengan alamat email yang benar, yang merupakan tes verifikasi perilaku.</li>\n<li>Kita menggunakan <em>stub</em> untuk <code class=\"language-text\">UserService</code> dan <code class=\"language-text\">DiscountService</code> karena kita hanya membutuhkan respons statis dari layanan-layanan ini tanpa memverifikasi interaksinya.</li>\n</ul>\n<p><strong>Ringkasan</strong></p>\n<ul>\n<li><em>Stub</em> dalam <code class=\"language-text\">testCalculateOrderTotalWithDiscount</code>: Mengembalikan nilai diskon statis untuk menghitung total pesanan tanpa verifikasi interaksi.</li>\n<li><em>Mock</em> dalam <code class=\"language-text\">testProcessOrderSendsEmail</code>: Memverifikasi bahwa <code class=\"language-text\">OrderProcessor</code> memanggil <code class=\"language-text\">sendOrderConfirmation</code> pada <code class=\"language-text\">EmailService</code> dengan email yang benar, memastikan perilaku yang tepat.</li>\n</ul>","frontmatter":{"title":"Test Double: Mock dan Stub","date":"November 09, 2024"}}},"pageContext":{"slug":"/2024/11/test-double-mock-dan-stub/","previous":{"fields":{"slug":"/2024/11/10-rekomendasi-buku-soft-skill-developer/"},"frontmatter":{"title":"10 Rekomendasi Buku untuk Meningkatkan Soft Skill Developer"}},"next":{"fields":{"slug":"/2024/11/junior-to-senior-dev/"},"frontmatter":{"title":"Dari Junior menjadi Senior Developer"}}}},"staticQueryHashes":["2486386679","3128451518"]}